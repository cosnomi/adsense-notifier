version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15-stretch
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - run:
          name: yarn build
          command: |
            yarn install
            yarn build
      - run:
          name: yarn test
          command: |
            yarn run test
      - run:
          name: Create artifact
          command: |
            sudo apt-get update
            sudo apt-get install -y zip
            rm -rf ./node_modules
            yarn install --production
            mkdir files_to_upload
            cp dest/* files_to_upload
            cp -r node_modules files_to_upload
            sudo chmod 755 ./files_to_upload/* -R
            zip -r ./to_upload ./files_to_upload/*
      - store_artifacts:
          path: ./to_upload.zip
          destination: to_upload.zip
      - persist_to_workspace:
          root: .
          paths:
            - .
  # AWS credentials must be provided via environment variables
  deploy:
    docker:
      - image: circleci/python:3.6.4
        environment:
          TZ: Asia/Tokyo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install aws packages
          command: sudo pip install awscli aws-sam-cli
      - run:
          name: Show versions
          command: |
            aws --version
            sam --version
      - run:
          name: Deploy via AWS SAM
          command: |
            sam package --template-file template.yaml --output-template-file template-packed.yaml --s3-bucket adsense-notifier
            sam deploy --template-file template-packed.yaml --stack-name adsense-notifier --capabilities CAPABILITY_IAM --parameter-overrides SlackWebhookUrl=$SLACK_WEBHOOK_URL
  release:
    docker:
      - image: circleci/node:10.15-stretch
        environment:
          TZ: Asia/Tokyo
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install libraries
          command: |
            echo "deb http://ftp.debian.org/debian stretch-backports main" | sudo tee -a /etc/apt/sources.list
            sudo apt-get update
            sudo apt-get -t stretch-backports install -y git golang
            export GOPATH=$HOME/go
            echo 'export PATH='"$GOPATH"'/bin:$PATH' >> $BASH_ENV
            go get github.com/tcnksm/ghr
      - run:
          name: Release
          command: |
            VERSION=$(git describe)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./to_upload.zip
workflows:
  version: 2
  build_and_release:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - release:
          requires:
            - build
          filters:
            branches:
              only:
                - master
